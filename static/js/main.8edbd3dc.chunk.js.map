{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Contact/Contact.module.css"],"names":["module","exports","Container","children","className","styles","container","cx","classNames","bind","initialState","name","number","ContactForm","onSubmitForm","useState","state","setState","handleInputChange","currentTarget","value","prev","nameClasses","numberClasses","onSubmit","event","preventDefault","type","ContactForm__input","pattern","title","placeholder","required","onChange","ContactForm_button","Contact","id","onDeleteContact","Contact__item","Contact_text","Contact__name","Contact__number","Contact__button","onClick","ContactList","contacts","ContactList__wrap","map","Filter","filter","onChangeFilter","Filter__label","Filter__input","App","useEffect","contactsData","localStorage","getItem","ParsedContactsData","JSON","parse","prevState","setItem","stringify","contact","includes","alert","shortid","generate","length","normalizedFilter","toLowerCase","getFilteredContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8edbd3dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1iXPs\",\"Filter__label\":\"Filter_Filter__label__X7lae\",\"Filter__input\":\"Filter_Filter__input__9NtAs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__wrap\":\"ContactList_ContactList__wrap__1Nn4Z\",\"ContactList\":\"ContactList_ContactList__1xSSw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3dSKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__3SBMm\",\"ContactForm_label\":\"ContactForm_ContactForm_label__1afMk\",\"ContactForm_label--name\":\"ContactForm_ContactForm_label--name__Bb-oT\",\"ContactForm_label--number\":\"ContactForm_ContactForm_label--number__3u1v_\",\"ContactForm_button\":\"ContactForm_ContactForm_button__2UHc7\",\"ContactForm__input\":\"ContactForm_ContactForm__input__1yi1A\"};","import styles from './Container.module.css';\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\nexport default Container;\n","import { useState } from 'react';\nimport classNames from 'classnames/bind';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nlet cx = classNames.bind(styles);\nconst initialState = {\n  name: '',\n  number: '',\n};\nconst ContactForm = ({ onSubmitForm }) => {\n  const [state, setState] = useState(initialState);\n\n  const handleInputChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmitForm(state);\n    setState(initialState);\n  };\n\n  const nameClasses = cx('ContactForm_label', 'ContactForm_label--name');\n  const numberClasses = cx('ContactForm_label', 'ContactForm_label--number');\n  const { name, number } = state;\n  return (\n    <form onSubmit={handleSubmit} className={styles.ContactForm}>\n      <label className={nameClasses}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={styles.ContactForm__input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\" \"\n          required\n          value={name}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={numberClasses}>\n        Nubmer\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={styles.ContactForm__input}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          placeholder=\" \"\n          required\n          value={number}\n          onChange={handleInputChange}\n        />\n      </label>\n\n      <button type=\"submit\" className={styles.ContactForm_button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\n\nconst Contact = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={styles.Contact__item}>\n      <p className={styles.Contact_text}>\n        <span className={styles.Contact__name}>{name}</span>:{' '}\n        <span className={styles.Contact__number}>{number}</span>\n      </p>\n\n      <button\n        className={styles.Contact__button}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import PropTypes from 'prop-types';\nimport Contact from '../Contact';\nimport styles from './ContactList.module.css';\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <div className={styles.ContactList__wrap}>\n    <ul className={styles.ContactList}>\n      {contacts.map(({ id, name, number }) => (\n        <Contact\n          key={id}\n          name={name}\n          number={number}\n          id={id}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import React from 'react';\nimport styles from './Filter.module.css';\nconst Filter = ({ filter, onChangeFilter }) => (\n  <div className={styles.Filter}>\n    <label className={styles.Filter__label}>\n      find contacts by name\n      <input\n        value={filter}\n        onChange={onChangeFilter}\n        className={styles.Filter__input}\n      />\n    </label>\n  </div>\n);\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nconst App = () => {\n  const [state, setState] = useState({\n    contacts: [],\n    filter: '',\n  });\n\n  useEffect(() => {\n    const contactsData = localStorage.getItem('contacts');\n    const ParsedContactsData = JSON.parse(contactsData);\n    if (ParsedContactsData) {\n      setState(prevState => ({\n        ...prevState,\n        contacts: ParsedContactsData,\n      }));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(state.contacts));\n  }, [state.contacts]);\n\n  const { contacts, filter } = state;\n\n  // Додаємо об'єкт\n  const addContact = ({ name, number }) => {\n    const contactsNames = contacts.map(contact => contact.name);\n    if (contactsNames.includes(name)) {\n      alert(`${name}is already in contacts`);\n      return;\n    }\n    const contact = {\n      name,\n      id: shortid.generate(),\n      number,\n    };\n\n    setState(prevState => ({\n      ...prevState,\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  // Видаляємо об'єкт\n  const deleteContact = contactId => {\n    setState(prevState => ({\n      ...prevState,\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  // змінюємо інпут фільтрації\n  const changeFilter = ({ currentTarget }) => {\n    setState({\n      ...state,\n      filter: currentTarget.value,\n    });\n  };\n  // Фільтруємо існуючі контакти\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <>\n      <Container>\n        <h1>Phonebook</h1>\n        {/* форма для введення контактних даних  */}\n        <ContactForm onSubmitForm={addContact} />\n        {/* якщо контакти є, то відображаємо список і фільтр */}\n        {contacts.length > 0 && (\n          <>\n            <h2>Contacts</h2>\n            {/* фільтрація контактів */}\n            <Filter filter={filter} onChangeFilter={changeFilter} />\n            {/* список контактів */}\n            <ContactList\n              contacts={getFilteredContacts()}\n              onDeleteContact={deleteContact}\n            />\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/reset.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact__item\":\"Contact_Contact__item__2wu9I\",\"Contact_text\":\"Contact_Contact_text__2TM89\",\"Contact__name\":\"Contact_Contact__name__17hxv\",\"Contact__number\":\"Contact_Contact__number__2O9ql\",\"Contact__button\":\"Contact_Contact__button__1eAO6\"};"],"sourceRoot":""}